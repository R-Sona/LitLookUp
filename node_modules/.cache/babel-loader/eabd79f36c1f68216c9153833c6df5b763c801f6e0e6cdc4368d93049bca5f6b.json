{"ast":null,"code":"var _jsxFileName = \"D:\\\\openbook\\\\src\\\\components\\\\BookList\\\\BookList.jsx\",\n  _s = $RefreshSig$();\n/*import React from 'react';\r\nimport { useGlobalContext } from './context/.';\r\nimport Book from \"../BookList/Book\";\r\nimport Loading from \"../Loader/Loader\";\r\nimport coverImg from \"../../images/cover_not_found.jpg\";\r\nimport \"./BookList.css\";\r\n\r\n//https://covers.openlibrary.org/b/id/240727-S.jpg\r\n\r\nconst BookList = () => {\r\n  const {books, loading, resultTitle} = useGlobalContext();\r\n  const booksWithCovers = books.map((singleBook) => {\r\n    return {\r\n      ...singleBook,\r\n      // removing /works/ to get only id\r\n      id: (singleBook.id).replace(\"/works/\", \"\"),\r\n      cover_img: singleBook.cover_id ? `https://covers.openlibrary.org/b/id/${singleBook.cover_id}-L.jpg` : coverImg\r\n    }\r\n  });\r\n\r\n  if(loading) return <Loading />;\r\n\r\n  return (\r\n    <section className='booklist'>\r\n      <div className='container'>\r\n        <div className='section-title'>\r\n          <h2>{resultTitle}</h2>\r\n        </div>\r\n        <div className='booklist-content grid'>\r\n          {\r\n            booksWithCovers.slice(0, 30).map((item, index) => {\r\n              return (\r\n                <Book key = {index} {...item} />\r\n              )\r\n            })\r\n          }\r\n        </div>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default BookList*/\nimport React from 'react';\nimport { useGlobalContext } from '../../context';\nimport Book from \"../BookList/Book\";\nimport Loading from \"../Loader/Loader\";\nimport coverImg from \"../../images/cover_not_found.jpg\";\nimport \"./BookList.css\";\n\n//https://covers.openlibrary.org/b/id/240727-S.jpg\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BookList = () => {\n  _s();\n  const {\n    books,\n    loading,\n    resultTitle\n  } = useGlobalContext();\n  const booksWithCovers = books.map(singleBook => {\n    return {\n      ...singleBook,\n      id: singleBook.id.replace(\"/works/\", \"\"),\n      cover_img: singleBook.cover_id ? `https://covers.openlibrary.org/b/id/${singleBook.cover_id}-L.jpg` : coverImg\n    };\n  });\n  console.log(booksWithCovers);\n  if (loading) return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 22\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"booklist\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section-title\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: resultTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"booklist-content grid\",\n        children: booksWithCovers.slice(0, 30).map((item, index) => {\n          return /*#__PURE__*/_jsxDEV(Book, {\n            ...item\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(BookList, \"Vgp/ka2yZvXDWITc7koY1ePLT5s=\", false, function () {\n  return [useGlobalContext];\n});\n_c = BookList;\nexport default BookList;\nvar _c;\n$RefreshReg$(_c, \"BookList\");","map":{"version":3,"names":["React","useGlobalContext","Book","Loading","coverImg","jsxDEV","_jsxDEV","BookList","_s","books","loading","resultTitle","booksWithCovers","map","singleBook","id","replace","cover_img","cover_id","console","log","fileName","_jsxFileName","lineNumber","columnNumber","className","children","slice","item","index","_c","$RefreshReg$"],"sources":["D:/openbook/src/components/BookList/BookList.jsx"],"sourcesContent":["/*import React from 'react';\r\nimport { useGlobalContext } from './context/.';\r\nimport Book from \"../BookList/Book\";\r\nimport Loading from \"../Loader/Loader\";\r\nimport coverImg from \"../../images/cover_not_found.jpg\";\r\nimport \"./BookList.css\";\r\n\r\n//https://covers.openlibrary.org/b/id/240727-S.jpg\r\n\r\nconst BookList = () => {\r\n  const {books, loading, resultTitle} = useGlobalContext();\r\n  const booksWithCovers = books.map((singleBook) => {\r\n    return {\r\n      ...singleBook,\r\n      // removing /works/ to get only id\r\n      id: (singleBook.id).replace(\"/works/\", \"\"),\r\n      cover_img: singleBook.cover_id ? `https://covers.openlibrary.org/b/id/${singleBook.cover_id}-L.jpg` : coverImg\r\n    }\r\n  });\r\n\r\n  if(loading) return <Loading />;\r\n\r\n  return (\r\n    <section className='booklist'>\r\n      <div className='container'>\r\n        <div className='section-title'>\r\n          <h2>{resultTitle}</h2>\r\n        </div>\r\n        <div className='booklist-content grid'>\r\n          {\r\n            booksWithCovers.slice(0, 30).map((item, index) => {\r\n              return (\r\n                <Book key = {index} {...item} />\r\n              )\r\n            })\r\n          }\r\n        </div>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default BookList*/\r\nimport React from 'react';\r\nimport { useGlobalContext } from '../../context';\r\nimport Book from \"../BookList/Book\";\r\nimport Loading from \"../Loader/Loader\";\r\nimport coverImg from \"../../images/cover_not_found.jpg\";\r\nimport \"./BookList.css\";\r\n\r\n//https://covers.openlibrary.org/b/id/240727-S.jpg\r\nconst BookList = () => {\r\n  const {books, loading,resultTitle}= useGlobalContext();\r\n  const booksWithCovers=books.map((singleBook) => {\r\n    return {\r\n      ...singleBook,\r\n      id:(singleBook.id).replace(\"/works/\",\"\"),\r\n      cover_img:singleBook.cover_id ? `https://covers.openlibrary.org/b/id/${singleBook.cover_id}-L.jpg` : coverImg\r\n    }\r\n  });\r\n\r\n  console.log(booksWithCovers);\r\n\r\n  if(loading) return <Loading />;\r\n  return (\r\n    <section className='booklist'>\r\n      <div className='container'>\r\n        <div className='section-title'>\r\n          <h2>{resultTitle}</h2>\r\n        </div>\r\n        <div className='booklist-content grid'>\r\n          {\r\n            booksWithCovers.slice(0,30).map((item,index) =>{\r\n              return(\r\n                <Book key ={index} {...item} />\r\n              )\r\n            })\r\n          }\r\n        </div>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default BookList"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,gBAAgB,QAAQ,eAAe;AAChD,OAAOC,IAAI,MAAM,kBAAkB;AACnC,OAAOC,OAAO,MAAM,kBAAkB;AACtC,OAAOC,QAAQ,MAAM,kCAAkC;AACvD,OAAO,gBAAgB;;AAEvB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM;IAACC,KAAK;IAAEC,OAAO;IAACC;EAAW,CAAC,GAAEV,gBAAgB,EAAE;EACtD,MAAMW,eAAe,GAACH,KAAK,CAACI,GAAG,CAAEC,UAAU,IAAK;IAC9C,OAAO;MACL,GAAGA,UAAU;MACbC,EAAE,EAAED,UAAU,CAACC,EAAE,CAAEC,OAAO,CAAC,SAAS,EAAC,EAAE,CAAC;MACxCC,SAAS,EAACH,UAAU,CAACI,QAAQ,GAAI,uCAAsCJ,UAAU,CAACI,QAAS,QAAO,GAAGd;IACvG,CAAC;EACH,CAAC,CAAC;EAEFe,OAAO,CAACC,GAAG,CAACR,eAAe,CAAC;EAE5B,IAAGF,OAAO,EAAE,oBAAOJ,OAAA,CAACH,OAAO;IAAAkB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAG;EAC9B,oBACElB,OAAA;IAASmB,SAAS,EAAC,UAAU;IAAAC,QAAA,eAC3BpB,OAAA;MAAKmB,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACxBpB,OAAA;QAAKmB,SAAS,EAAC,eAAe;QAAAC,QAAA,eAC5BpB,OAAA;UAAAoB,QAAA,EAAKf;QAAW;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAM;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAClB,eACNlB,OAAA;QAAKmB,SAAS,EAAC,uBAAuB;QAAAC,QAAA,EAElCd,eAAe,CAACe,KAAK,CAAC,CAAC,EAAC,EAAE,CAAC,CAACd,GAAG,CAAC,CAACe,IAAI,EAACC,KAAK,KAAI;UAC7C,oBACEvB,OAAA,CAACJ,IAAI;YAAA,GAAkB0B;UAAI,GAAfC,KAAK;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAc;QAEnC,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAEA;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACF;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACE;AAEd,CAAC;AAAAhB,EAAA,CA/BKD,QAAQ;EAAA,QACwBN,gBAAgB;AAAA;AAAA6B,EAAA,GADhDvB,QAAQ;AAiCd,eAAeA,QAAQ;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}