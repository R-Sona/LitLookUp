{"ast":null,"code":"var _jsxFileName = \"D:\\\\openbook\\\\src\\\\components\\\\BookList\\\\BookList.jsx\";\n/*import React from 'react';\r\nimport { useGlobalContext } from './context/.';\r\nimport Book from \"../BookList/Book\";\r\nimport Loading from \"../Loader/Loader\";\r\nimport coverImg from \"../../images/cover_not_found.jpg\";\r\nimport \"./BookList.css\";\r\n\r\n//https://covers.openlibrary.org/b/id/240727-S.jpg\r\n\r\nconst BookList = () => {\r\n  const {books, loading, resultTitle} = useGlobalContext();\r\n  const booksWithCovers = books.map((singleBook) => {\r\n    return {\r\n      ...singleBook,\r\n      // removing /works/ to get only id\r\n      id: (singleBook.id).replace(\"/works/\", \"\"),\r\n      cover_img: singleBook.cover_id ? `https://covers.openlibrary.org/b/id/${singleBook.cover_id}-L.jpg` : coverImg\r\n    }\r\n  });\r\n\r\n  if(loading) return <Loading />;\r\n\r\n  return (\r\n    <section className='booklist'>\r\n      <div className='container'>\r\n        <div className='section-title'>\r\n          <h2>{resultTitle}</h2>\r\n        </div>\r\n        <div className='booklist-content grid'>\r\n          {\r\n            booksWithCovers.slice(0, 30).map((item, index) => {\r\n              return (\r\n                <Book key = {index} {...item} />\r\n              )\r\n            })\r\n          }\r\n        </div>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default BookList*/\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BookList = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"BookList\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_c = BookList;\nexport default BookList;\nvar _c;\n$RefreshReg$(_c, \"BookList\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","BookList","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/openbook/src/components/BookList/BookList.jsx"],"sourcesContent":["/*import React from 'react';\r\nimport { useGlobalContext } from './context/.';\r\nimport Book from \"../BookList/Book\";\r\nimport Loading from \"../Loader/Loader\";\r\nimport coverImg from \"../../images/cover_not_found.jpg\";\r\nimport \"./BookList.css\";\r\n\r\n//https://covers.openlibrary.org/b/id/240727-S.jpg\r\n\r\nconst BookList = () => {\r\n  const {books, loading, resultTitle} = useGlobalContext();\r\n  const booksWithCovers = books.map((singleBook) => {\r\n    return {\r\n      ...singleBook,\r\n      // removing /works/ to get only id\r\n      id: (singleBook.id).replace(\"/works/\", \"\"),\r\n      cover_img: singleBook.cover_id ? `https://covers.openlibrary.org/b/id/${singleBook.cover_id}-L.jpg` : coverImg\r\n    }\r\n  });\r\n\r\n  if(loading) return <Loading />;\r\n\r\n  return (\r\n    <section className='booklist'>\r\n      <div className='container'>\r\n        <div className='section-title'>\r\n          <h2>{resultTitle}</h2>\r\n        </div>\r\n        <div className='booklist-content grid'>\r\n          {\r\n            booksWithCovers.slice(0, 30).map((item, index) => {\r\n              return (\r\n                <Book key = {index} {...item} />\r\n              )\r\n            })\r\n          }\r\n        </div>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default BookList*/\r\nimport React from 'react'\r\n\r\nconst BookList = () => {\r\n  return (\r\n    <div>BookList</div>\r\n  )\r\n}\r\n\r\nexport default BookList"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAK,MAAM,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EACrB,oBACED,OAAA;IAAAE,QAAA,EAAK;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAM;AAEvB,CAAC;AAAAC,EAAA,GAJKN,QAAQ;AAMd,eAAeA,QAAQ;AAAA,IAAAM,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}