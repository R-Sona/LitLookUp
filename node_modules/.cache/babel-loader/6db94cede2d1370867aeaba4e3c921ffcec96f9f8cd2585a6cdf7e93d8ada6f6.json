{"ast":null,"code":"import _regeneratorRuntime from\"D:/React_projects/openbook/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"D:/React_projects/openbook/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"D:/React_projects/openbook/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";/*import React, {useState, useContext, useEffect} from 'react';\r\nimport { useCallback } from 'react';\r\nconst URL=\"https://openlibrary.org/search.json?title=\";\r\nconst AppContext = React.createContext();\r\n\r\nconst AppProvider = ({children}) => {\r\n    const [searchTerm, setSearchTerm] = useState(\"the lost world\");\r\n    const [books, setBooks] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [resultTitle, setResultTitle] = useState(\"\");\r\n\r\n    const fetchBooks = useCallback(async() => {\r\n        setLoading(true);\r\n        try{\r\n            const response = await fetch(`${URL}${searchTerm}`);\r\n            const data = await response.json();\r\n            \r\n            const {docs} = data;\r\n            console.log(data);\r\n            \r\n            if(docs){\r\n                const newBooks = docs.slice(0, 20).map((bookSingle) => {\r\n                    const {key, author_name, cover_i, edition_count, first_publish_year, title} = bookSingle;\r\n\r\n                    return {\r\n                        id: key,\r\n                        author: author_name,\r\n                        cover_id: cover_i,\r\n                        edition_count: edition_count,\r\n                        first_publish_year: first_publish_year,\r\n                        title: title\r\n                    }\r\n                });\r\n\r\n                setBooks(newBooks);\r\n\r\n                if(newBooks.length > 1){\r\n                    setResultTitle(\"Your Search Result\");\r\n                } else {\r\n                    setResultTitle(\"No Search Result Found!\")\r\n                }\r\n            } else {\r\n                setBooks([]);\r\n                setResultTitle(\"No Search Result Found!\");\r\n            }\r\n            setLoading(false);\r\n\r\n        }catch(error){\r\n            console.log(error);\r\n            setLoading(false);\r\n        }\r\n\r\n    },[searchTerm]);\r\n\r\n    useEffect(() => {\r\n        fetchBooks();\r\n    }, [searchTerm, fetchBooks]);\r\n\r\n    return (\r\n        <AppContext.Provider value = {{\r\n            loading, books, setSearchTerm, resultTitle, setResultTitle,\r\n        }}>\r\n            {children}\r\n        </AppContext.Provider>\r\n    )\r\n\r\n}\r\n\r\nexport const useGlobalContext = () => {\r\n    return useContext(AppContext);\r\n}\r\n\r\nexport {AppContext, AppProvider};*/import React,{useState,useContext,useEffect}from'react';import{useCallback}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";var URL=\"https://openlibrary.org/search.json?title=\";var AppContext=/*#__PURE__*/React.createContext();var AppProvider=function AppProvider(_ref){var children=_ref.children;var _useState=useState(\"the lost world\"),_useState2=_slicedToArray(_useState,2),searchTerm=_useState2[0],setSearchTerm=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),books=_useState4[0],setBooks=_useState4[1];var _useState5=useState(true),_useState6=_slicedToArray(_useState5,2),loading=_useState6[0],setLoading=_useState6[1];var _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),resultTitle=_useState8[0],setResultTitle=_useState8[1];var fetchBooks=useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var response,data,docs,newBooks;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:setLoading(true);_context.prev=1;_context.next=4;return fetch(\"\".concat(URL).concat(searchTerm));case 4:response=_context.sent;_context.next=7;return response.json();case 7:data=_context.sent;console.log(data);docs=data.docs;console.log(docs);if(docs){newBooks=docs.slice(0,20).map(function(bookSingle){var key=bookSingle.key,author_name=bookSingle.author_name,cover_i=bookSingle.cover_i,edition_count=bookSingle.edition_count,first_publish_year=bookSingle.first_publish_year,title=bookSingle.title;return{id:key,author:author_name,cover_id:cover_i,edition_count:edition_count,first_publish_year:first_publish_year,title:title};});setBooks(newBooks);if(newBooks.length>1){setResultTitle(\"Your Search Result\");}else{setResultTitle(\"No Search Result Found\");}}else{setBooks([]);setResultTitle(\"No Search Result Found!\");}setLoading(false);_context.next=19;break;case 15:_context.prev=15;_context.t0=_context[\"catch\"](1);console.log(_context.t0);setLoading(false);case 19:case\"end\":return _context.stop();}},_callee,null,[[1,15]]);})),[searchTerm]);useEffect(function(){fetchBooks();},[searchTerm,fetchBooks]);return/*#__PURE__*/_jsx(AppContext.Provider,{value:{loading:loading,books:books,setSearchTerm:setSearchTerm,resultTitle:resultTitle,setResultTitle:setResultTitle},children:children});};export var useGlobalContext=function useGlobalContext(){return useContext(AppContext);};export{AppContext,AppProvider};","map":{"version":3,"names":["React","useState","useContext","useEffect","useCallback","jsx","_jsx","URL","AppContext","createContext","AppProvider","_ref","children","_useState","_useState2","_slicedToArray","searchTerm","setSearchTerm","_useState3","_useState4","books","setBooks","_useState5","_useState6","loading","setLoading","_useState7","_useState8","resultTitle","setResultTitle","fetchBooks","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","data","docs","newBooks","wrap","_callee$","_context","prev","next","fetch","concat","sent","json","console","log","slice","map","bookSingle","key","author_name","cover_i","edition_count","first_publish_year","title","id","author","cover_id","length","t0","stop","Provider","value","useGlobalContext"],"sources":["D:/React_projects/openbook/src/context.js"],"sourcesContent":["/*import React, {useState, useContext, useEffect} from 'react';\r\nimport { useCallback } from 'react';\r\nconst URL=\"https://openlibrary.org/search.json?title=\";\r\nconst AppContext = React.createContext();\r\n\r\nconst AppProvider = ({children}) => {\r\n    const [searchTerm, setSearchTerm] = useState(\"the lost world\");\r\n    const [books, setBooks] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [resultTitle, setResultTitle] = useState(\"\");\r\n\r\n    const fetchBooks = useCallback(async() => {\r\n        setLoading(true);\r\n        try{\r\n            const response = await fetch(`${URL}${searchTerm}`);\r\n            const data = await response.json();\r\n            \r\n            const {docs} = data;\r\n            console.log(data);\r\n            \r\n            if(docs){\r\n                const newBooks = docs.slice(0, 20).map((bookSingle) => {\r\n                    const {key, author_name, cover_i, edition_count, first_publish_year, title} = bookSingle;\r\n\r\n                    return {\r\n                        id: key,\r\n                        author: author_name,\r\n                        cover_id: cover_i,\r\n                        edition_count: edition_count,\r\n                        first_publish_year: first_publish_year,\r\n                        title: title\r\n                    }\r\n                });\r\n\r\n                setBooks(newBooks);\r\n\r\n                if(newBooks.length > 1){\r\n                    setResultTitle(\"Your Search Result\");\r\n                } else {\r\n                    setResultTitle(\"No Search Result Found!\")\r\n                }\r\n            } else {\r\n                setBooks([]);\r\n                setResultTitle(\"No Search Result Found!\");\r\n            }\r\n            setLoading(false);\r\n\r\n        }catch(error){\r\n            console.log(error);\r\n            setLoading(false);\r\n        }\r\n\r\n    },[searchTerm]);\r\n\r\n    useEffect(() => {\r\n        fetchBooks();\r\n    }, [searchTerm, fetchBooks]);\r\n\r\n    return (\r\n        <AppContext.Provider value = {{\r\n            loading, books, setSearchTerm, resultTitle, setResultTitle,\r\n        }}>\r\n            {children}\r\n        </AppContext.Provider>\r\n    )\r\n\r\n}\r\n\r\nexport const useGlobalContext = () => {\r\n    return useContext(AppContext);\r\n}\r\n\r\nexport {AppContext, AppProvider};*/\r\n\r\nimport React, {useState, useContext, useEffect} from 'react';\r\nimport { useCallback } from 'react';\r\nconst URL=\"https://openlibrary.org/search.json?title=\";\r\nconst AppContext = React.createContext();\r\n\r\nconst AppProvider = ({children}) => {\r\n    const [searchTerm, setSearchTerm] = useState(\"the lost world\");\r\n    const [books, setBooks] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [resultTitle, setResultTitle] = useState(\"\");\r\n\r\n    const fetchBooks = useCallback(async() => {\r\n        setLoading(true);\r\n        try{\r\n            const response = await fetch(`${URL}${searchTerm}`);\r\n            const data = await response.json();\r\n            console.log(data);\r\n            const {docs} = data;\r\n            console.log(docs);\r\n\r\n            if(docs){\r\n                const newBooks=docs.slice(0,20).map((bookSingle)=>{\r\n                    const {key,author_name,cover_i,edition_count,first_publish_year,title}=bookSingle;\r\n\r\n                    return {\r\n                        id:key,\r\n                        author:author_name,\r\n                        cover_id:cover_i,\r\n                        edition_count:edition_count,\r\n                        first_publish_year:first_publish_year,\r\n                        title:title\r\n                    }\r\n                });\r\n\r\n                setBooks(newBooks);\r\n                if(newBooks.length>1){\r\n                    setResultTitle(\"Your Search Result\");\r\n                }else{\r\n                    setResultTitle(\"No Search Result Found\")\r\n                }\r\n\r\n            }else{\r\n                setBooks([]);\r\n                setResultTitle(\"No Search Result Found!\");\r\n            }\r\n            setLoading(false);\r\n            \r\n        }catch(error){\r\n            console.log(error);\r\n            setLoading(false);\r\n        }\r\n\r\n},[searchTerm]);\r\n\r\nuseEffect(() => {\r\n    fetchBooks();\r\n}, [searchTerm, fetchBooks]);\r\n\r\nreturn (\r\n    <AppContext.Provider value = {{\r\n        loading, books, setSearchTerm, resultTitle, setResultTitle,\r\n    }}>\r\n        {children}\r\n    </AppContext.Provider>\r\n)\r\n\r\n\r\n}\r\n         \r\n\r\nexport const  useGlobalContext =()=>{\r\n    return useContext(AppContext);\r\n\r\n}\r\n\r\nexport {AppContext,AppProvider};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}