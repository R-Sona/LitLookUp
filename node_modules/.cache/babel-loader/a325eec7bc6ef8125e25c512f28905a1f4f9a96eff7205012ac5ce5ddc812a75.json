{"ast":null,"code":"var _s = $RefreshSig$();\n/*import React, {useState, useContext, useEffect} from 'react';\r\nimport { useCallback } from 'react';\r\nconst URL=\"https://openlibrary.org/search.json?title=\";\r\nconst AppContext = React.createContext();\r\n\r\nconst AppProvider = ({children}) => {\r\n    const [searchTerm, setSearchTerm] = useState(\"the lost world\");\r\n    const [books, setBooks] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [resultTitle, setResultTitle] = useState(\"\");\r\n\r\n    const fetchBooks = useCallback(async() => {\r\n        setLoading(true);\r\n        try{\r\n            const response = await fetch(`${URL}${searchTerm}`);\r\n            const data = await response.json();\r\n            \r\n            const {docs} = data;\r\n            console.log(data);\r\n            \r\n            if(docs){\r\n                const newBooks = docs.slice(0, 20).map((bookSingle) => {\r\n                    const {key, author_name, cover_i, edition_count, first_publish_year, title} = bookSingle;\r\n\r\n                    return {\r\n                        id: key,\r\n                        author: author_name,\r\n                        cover_id: cover_i,\r\n                        edition_count: edition_count,\r\n                        first_publish_year: first_publish_year,\r\n                        title: title\r\n                    }\r\n                });\r\n\r\n                setBooks(newBooks);\r\n\r\n                if(newBooks.length > 1){\r\n                    setResultTitle(\"Your Search Result\");\r\n                } else {\r\n                    setResultTitle(\"No Search Result Found!\")\r\n                }\r\n            } else {\r\n                setBooks([]);\r\n                setResultTitle(\"No Search Result Found!\");\r\n            }\r\n            setLoading(false);\r\n\r\n        }catch(error){\r\n            console.log(error);\r\n            setLoading(false);\r\n        }\r\n\r\n    },[searchTerm]);\r\n\r\n    useEffect(() => {\r\n        fetchBooks();\r\n    }, [searchTerm, fetchBooks]);\r\n\r\n    return (\r\n        <AppContext.Provider value = {{\r\n            loading, books, setSearchTerm, resultTitle, setResultTitle,\r\n        }}>\r\n            {children}\r\n        </AppContext.Provider>\r\n    )\r\n\r\n}\r\n\r\nexport const useGlobalContext = () => {\r\n    return useContext(AppContext);\r\n}\r\n\r\nexport {AppContext, AppProvider};*/\n\nimport React, { useState, useContext, useEffect } from 'react';\nimport { useCallback } from 'react';\nconst URL = \"https://openlibrary.org/search.json?title=\";\nconst AppContext = /*#__PURE__*/React.createContext();\nconst AppProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [searchTerm, setSearchTerm] = useState(\"the lost world\");\n  const [books, setBooks] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [resultTitle, setResultTitle] = useState(\"\");\n  const fetchBooks = useCallback(async () => {\n    setLoading(true);\n    try {\n      const response = await fetch(`${URL}${searchTerm}`);\n      const data = await response.json();\n      console.log(data);\n      const {\n        docs\n      } = data;\n    } catch (error) {\n      console.log(error);\n      setLoading(false);\n    }\n  });\n};\n_s(AppProvider, \"BGJ0VZh70RIYLk3/NigPnMFkwHM=\");\n_c = AppProvider;\nvar _c;\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"names":["React","useState","useContext","useEffect","useCallback","URL","AppContext","createContext","AppProvider","_ref","_s","children","searchTerm","setSearchTerm","books","setBooks","loading","setLoading","resultTitle","setResultTitle","fetchBooks","response","fetch","data","json","console","log","docs","error","_c","$RefreshReg$"],"sources":["D:/openbook/src/context.js"],"sourcesContent":["/*import React, {useState, useContext, useEffect} from 'react';\r\nimport { useCallback } from 'react';\r\nconst URL=\"https://openlibrary.org/search.json?title=\";\r\nconst AppContext = React.createContext();\r\n\r\nconst AppProvider = ({children}) => {\r\n    const [searchTerm, setSearchTerm] = useState(\"the lost world\");\r\n    const [books, setBooks] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [resultTitle, setResultTitle] = useState(\"\");\r\n\r\n    const fetchBooks = useCallback(async() => {\r\n        setLoading(true);\r\n        try{\r\n            const response = await fetch(`${URL}${searchTerm}`);\r\n            const data = await response.json();\r\n            \r\n            const {docs} = data;\r\n            console.log(data);\r\n            \r\n            if(docs){\r\n                const newBooks = docs.slice(0, 20).map((bookSingle) => {\r\n                    const {key, author_name, cover_i, edition_count, first_publish_year, title} = bookSingle;\r\n\r\n                    return {\r\n                        id: key,\r\n                        author: author_name,\r\n                        cover_id: cover_i,\r\n                        edition_count: edition_count,\r\n                        first_publish_year: first_publish_year,\r\n                        title: title\r\n                    }\r\n                });\r\n\r\n                setBooks(newBooks);\r\n\r\n                if(newBooks.length > 1){\r\n                    setResultTitle(\"Your Search Result\");\r\n                } else {\r\n                    setResultTitle(\"No Search Result Found!\")\r\n                }\r\n            } else {\r\n                setBooks([]);\r\n                setResultTitle(\"No Search Result Found!\");\r\n            }\r\n            setLoading(false);\r\n\r\n        }catch(error){\r\n            console.log(error);\r\n            setLoading(false);\r\n        }\r\n\r\n    },[searchTerm]);\r\n\r\n    useEffect(() => {\r\n        fetchBooks();\r\n    }, [searchTerm, fetchBooks]);\r\n\r\n    return (\r\n        <AppContext.Provider value = {{\r\n            loading, books, setSearchTerm, resultTitle, setResultTitle,\r\n        }}>\r\n            {children}\r\n        </AppContext.Provider>\r\n    )\r\n\r\n}\r\n\r\nexport const useGlobalContext = () => {\r\n    return useContext(AppContext);\r\n}\r\n\r\nexport {AppContext, AppProvider};*/\r\n\r\nimport React, {useState, useContext, useEffect} from 'react';\r\nimport { useCallback } from 'react';\r\nconst URL=\"https://openlibrary.org/search.json?title=\";\r\nconst AppContext = React.createContext();\r\n\r\nconst AppProvider = ({children}) => {\r\n    const [searchTerm, setSearchTerm] = useState(\"the lost world\");\r\n    const [books, setBooks] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [resultTitle, setResultTitle] = useState(\"\");\r\n\r\n    const fetchBooks = useCallback(async() => {\r\n        setLoading(true);\r\n        try{\r\n            const response = await fetch(`${URL}${searchTerm}`);\r\n            const data = await response.json();\r\n            console.log(data);\r\n            const {docs} = data;\r\n            \r\n        }catch(error){\r\n            console.log(error);\r\n            setLoading(false);\r\n        }\r\n\r\n})\r\n}\r\n            \r\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,UAAU,EAAEC,SAAS,QAAO,OAAO;AAC5D,SAASC,WAAW,QAAQ,OAAO;AACnC,MAAMC,GAAG,GAAC,4CAA4C;AACtD,MAAMC,UAAU,gBAAGN,KAAK,CAACO,aAAa,EAAE;AAExC,MAAMC,WAAW,GAAGC,IAAA,IAAgB;EAAAC,EAAA;EAAA,IAAf;IAACC;EAAQ,CAAC,GAAAF,IAAA;EAC3B,MAAM,CAACG,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,gBAAgB,CAAC;EAC9D,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACiB,WAAW,EAAEC,cAAc,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAMmB,UAAU,GAAGhB,WAAW,CAAC,YAAW;IACtCa,UAAU,CAAC,IAAI,CAAC;IAChB,IAAG;MACC,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEjB,GAAI,GAAEO,UAAW,EAAC,CAAC;MACnD,MAAMW,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;MAClCC,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;MACjB,MAAM;QAACI;MAAI,CAAC,GAAGJ,IAAI;IAEvB,CAAC,QAAMK,KAAK,EAAC;MACTH,OAAO,CAACC,GAAG,CAACE,KAAK,CAAC;MAClBX,UAAU,CAAC,KAAK,CAAC;IACrB;EAER,CAAC,CAAC;AACF,CAAC;AAAAP,EAAA,CApBKF,WAAW;AAAAqB,EAAA,GAAXrB,WAAW;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}